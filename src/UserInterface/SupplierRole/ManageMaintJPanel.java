/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.SupplierRole;

import Business.Maintenance.MaintSchedule;
import Business.MedicalDevice.MedicalDevice;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Martin
 */
public class ManageMaintJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageMaintJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private ListSelectionModel cellSelectionModel;
    private myListSelectionListener listener;
    
    public ManageMaintJPanel(JPanel upc, UserAccount ua) {
        initComponents();
        this.userProcessContainer = upc;
        this.userAccount = ua;
        listener = new myListSelectionListener();
        
        poplateNewRequestTable();
//        maintenanceJTable.setCellSelectionEnabled(true);
        cellSelectionModel = maintenanceJTable.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cellSelectionModel.addListSelectionListener(listener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        maintenanceJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        problemJTxtArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        solutionJTxtArea = new javax.swing.JTextArea();
        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Maintenance Request Management");

        maintenanceJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Device ID", "Name", "Model", "Service Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(maintenanceJTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Problem Descrption");
        jLabel2.setEnabled(false);

        problemJTxtArea.setColumns(20);
        problemJTxtArea.setRows(5);
        problemJTxtArea.setEnabled(false);
        jScrollPane2.setViewportView(problemJTxtArea);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Solution");
        jLabel3.setEnabled(false);

        solutionJTxtArea.setColumns(20);
        solutionJTxtArea.setRows(5);
        solutionJTxtArea.setEnabled(false);
        jScrollPane3.setViewportView(solutionJTxtArea);

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        submitJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        submitJButton.setText("Served");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(submitJButton))
                .addGap(13, 13, 13))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        ((CardLayout)userProcessContainer.getLayout()).previous(userProcessContainer);        
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = maintenanceJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "No request is selected!");
            return;
        }
        MedicalDevice md = (MedicalDevice)maintenanceJTable.getValueAt(selectedRow, 0);
        MaintSchedule ms = md.getMaintScheduleHistory().getLastMaintenace();
        ms.setLastMaintDate(new Date());
        ms.setNextMaintDate();
        if (ms.getmType().equals(MaintSchedule.MaintType.REP)) {
            ms.setFixDesp(solutionJTxtArea.getText());
        }
        md.setStatus("Operational");
        md.setLocation("Inventory");
        userAccount.getMaintRequestList().getMaintDevicesList().remove(md);
        poplateRequestTable();
    }//GEN-LAST:event_submitJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable maintenanceJTable;
    private javax.swing.JTextArea problemJTxtArea;
    private javax.swing.JTextArea solutionJTxtArea;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables

    private void poplateNewRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel)maintenanceJTable.getModel();
        dtm.setRowCount(0);
        
        for(MedicalDevice md : userAccount.getMaintRequestList().getMaintDevicesList()){
            Object[] row = new Object[4];
            row [0] = md;
            row [1] = md.getName();
            row [2] = md.getModel();
            row [3] = md.getMaintScheduleHistory().getLastMaintenace().getmType();
            
            dtm.addRow(row);
        }
    }
    
    private void poplateRequestTable() {
        cellSelectionModel.removeListSelectionListener(listener);
        DefaultTableModel dtm = (DefaultTableModel)maintenanceJTable.getModel();
        dtm.setRowCount(0);
        
        for(MedicalDevice md : userAccount.getMaintRequestList().getMaintDevicesList()){
            Object[] row = new Object[4];
            row [0] = md;
            row [1] = md.getName();
            row [2] = md.getModel();
            row [3] = md.getMaintScheduleHistory().getLastMaintenace().getmType();
            
            dtm.addRow(row);
        }
        cellSelectionModel.addListSelectionListener(listener);
    }
    
    class myListSelectionListener implements ListSelectionListener{
        public void valueChanged(ListSelectionEvent e) {
            int selectedRow = maintenanceJTable.getSelectedRow();
            MedicalDevice md = (MedicalDevice)maintenanceJTable.getValueAt(selectedRow, 0);
            if(md == null){
                JOptionPane.showMessageDialog(null, "No request is selected!");
                return;
            }
            if(md.getMaintScheduleHistory().getLastMaintenace().getmType().equals(MaintSchedule.MaintType.REP)){
                problemJTxtArea.setEnabled(true);
                problemJTxtArea.setText(md.getMaintScheduleHistory().getLastMaintenace().getProblemDesp());
                solutionJTxtArea.setEnabled(true);
            }
        }
    }
}
