/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.TeamLeaderRole;

import Business.EnterPrise.Enterprise;
import Business.Organization.MedStaffOrganization;
import Business.Organization.Organization;
import Business.Role.DoctorRole;
import Business.Role.NurseRole;
import Business.UserAccount.SurgicalTeam;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Martin
 */
public class ManageTeamJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageTeamJPanel
     */
    private JPanel userProcessContainer;
    private MedStaffOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private SurgicalTeam myTeam;
    
    public ManageTeamJPanel(JPanel upc, MedStaffOrganization org, UserAccount ua) {
        initComponents();
        this.userProcessContainer = upc;
        this.organization = org;
        this.userAccount = ua;
        myTeam = getMyTeam();
        
        populateTeamTable();
        populateDocComboBox();
        populateNurComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        teamJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        doctorJComboBox = new javax.swing.JComboBox();
        nurseJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        addDoctorJButton = new javax.swing.JButton();
        BackJButton = new javax.swing.JButton();
        addNurseJButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Manage Team Member");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 12, 0, 0);
        add(jLabel1, gridBagConstraints);

        teamJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User Name", "Employee ID", "Name", "Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(teamJTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 382;
        gridBagConstraints.ipady = 84;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 0, 38);
        add(jScrollPane1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Doctor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 12, 0, 0);
        add(jLabel2, gridBagConstraints);

        doctorJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 108;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 40, 0, 0);
        add(doctorJComboBox, gridBagConstraints);

        nurseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 108;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 40, 0, 0);
        add(nurseJComboBox, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nurse");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 12, 0, 0);
        add(jLabel3, gridBagConstraints);

        addDoctorJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addDoctorJButton.setText("Add Doctor");
        addDoctorJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorJButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 38);
        add(addDoctorJButton, gridBagConstraints);

        BackJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BackJButton.setText("<< Back");
        BackJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackJButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 57, 0);
        add(BackJButton, gridBagConstraints);

        addNurseJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addNurseJButton.setText("Add Nurse");
        addNurseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNurseJButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 41;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 38);
        add(addNurseJButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void BackJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);       
    }//GEN-LAST:event_BackJButtonActionPerformed

    private void addDoctorJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorJButtonActionPerformed
        // TODO add your handling code here:
        UserAccount doctor = (UserAccount)doctorJComboBox.getSelectedItem();
        if(null != doctor){
            myTeam.addTeamMember(doctor);
            organization.getUserAccountDirectory().removeUaVacancy(doctor);
        }
        populateDocComboBox();
        populateNurComboBox();
        populateTeamTable();
    }//GEN-LAST:event_addDoctorJButtonActionPerformed

    private void addNurseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNurseJButtonActionPerformed
        UserAccount nurse = (UserAccount)nurseJComboBox.getSelectedItem();
        if(null != nurse){
            myTeam.addTeamMember(nurse);
            organization.getUserAccountDirectory().removeUaVacancy(nurse);
        }   
        populateDocComboBox();
        populateNurComboBox();
        populateTeamTable();// TODO add your handling code here:
    }//GEN-LAST:event_addNurseJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackJButton;
    private javax.swing.JButton addDoctorJButton;
    private javax.swing.JButton addNurseJButton;
    private javax.swing.JComboBox doctorJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox nurseJComboBox;
    private javax.swing.JTable teamJTable;
    // End of variables declaration//GEN-END:variables

    private void populateTeamTable() {
        DefaultTableModel dtm = (DefaultTableModel) teamJTable.getModel();
        dtm.setRowCount(0);

        for (SurgicalTeam team : organization.getSurgicalTeamList()) {
            if (team.getTeamLeader().equals(userAccount)) {
                myTeam = team;
                for (UserAccount ua : team.getSurgicalTeamList()) {
                    Object[] row = new Object[4];
                    row[0] = ua;
                    row[1] = ua.getEmployee().getId();
                    row[2] = ua.getEmployee().getName();
                    row[3] = trimString(ua.getRole().toString());

                    dtm.addRow(row);
                }
            }
        }
    }

    private void populateDocComboBox() {
        doctorJComboBox.removeAllItems();
        for (UserAccount ua : organization.getUserAccountDirectory().getUaVacancyList()) {
            if (ua.getRole() instanceof DoctorRole) {
                doctorJComboBox.addItem(ua);
            }
        }
    }

    private void populateNurComboBox() {
        nurseJComboBox.removeAllItems();
        for (UserAccount ua : organization.getUserAccountDirectory().getUaVacancyList()) {
            if (ua.getRole() instanceof NurseRole) {
                nurseJComboBox.addItem(ua);
            }
        }
    }

    private SurgicalTeam getMyTeam() {
        SurgicalTeam myTeam = null;
        for(SurgicalTeam team : ((MedStaffOrganization)organization).getSurgicalTeamList()){
            if(team.getTeamLeader().equals(userAccount)){
                myTeam = team;
                break;
            }
        }
        return myTeam;
    }
    
    private String trimString(String str){
        int index = str.lastIndexOf(".");
        String trimedString = str.substring(index+1, str.length()-4);
        return trimedString;
    }
}
