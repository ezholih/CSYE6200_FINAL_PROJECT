/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.AssetAdminRole;

/**
 *
 * @author Martin
 */
public class ManagePurchaseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PurchaseMgnJPanel
     */
    public ManagePurchaseJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBTAddToCart = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableOrderItem = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerQuantity = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jBTViewProduct = new javax.swing.JButton();
        jTFModQuantity = new javax.swing.JTextField();
        jBTModQuantity = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProduct = new javax.swing.JTable();
        jBTRemoveItem = new javax.swing.JButton();
        jBTCheckOut = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jCBSupplier = new javax.swing.JComboBox();
        jBTBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jBTAddToCart.setText("Add to shopping cart");
        jBTAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTAddToCartActionPerformed(evt);
            }
        });

        jTableOrderItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Quantity", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableOrderItem);

        jLabel4.setText("Quantity");

        jSpinnerQuantity.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), null, null, Integer.valueOf(1)));

        jLabel6.setText("Modify Quantity");

        jBTViewProduct.setText("View Product Detail");
        jBTViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTViewProductActionPerformed(evt);
            }
        });

        jTFModQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFModQuantityActionPerformed(evt);
            }
        });

        jBTModQuantity.setText("Update");
        jBTModQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTModQuantityActionPerformed(evt);
            }
        });

        jTableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Model Number", "Price", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableProduct);

        jBTRemoveItem.setText("Remove Item");
        jBTRemoveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTRemoveItemActionPerformed(evt);
            }
        });

        jBTCheckOut.setText("Send Order");
        jBTCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTCheckOutActionPerformed(evt);
            }
        });

        jLabel5.setText("Items in shopping cart");

        jCBSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBSupplierActionPerformed(evt);
            }
        });

        jBTBack.setText("<< Back");
        jBTBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTBackActionPerformed(evt);
            }
        });

        jLabel2.setText("Supplier");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("New Device Purchase");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jBTViewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(jSpinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jBTAddToCart))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(jCBSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTFModQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBTModQuantity)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jBTBack)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jBTRemoveItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBTCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(85, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBTAddToCart)
                    .addComponent(jSpinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jBTViewProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBTRemoveItem)
                    .addComponent(jBTModQuantity)
                    .addComponent(jTFModQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBTBack)
                    .addComponent(jBTCheckOut))
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBTAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTAddToCartActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTableProduct.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }

        Product p = (Product) jTableProduct.getValueAt(selectedRow, 0);
        int quantity = (Integer) jSpinnerQuantity.getValue();
        if (quantity > p.getAvail()) {
            JOptionPane.showMessageDialog(null, "The desired quantity exceeds availability!");
            return;
        }
        avail = p.getAvail();

        OrderItem oi = order.addOrderItem(p, quantity);
        p.setAvail(p.getAvail() - quantity);
        refreshTwoTables();
    }//GEN-LAST:event_jBTAddToCartActionPerformed

    private void jBTViewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTViewProductActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTableProduct.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }

        Product p = (Product) jTableProduct.getValueAt(selectedRow, 0);
        ViewProductDetailsJPanel vpdjp = new ViewProductDetailsJPanel(userProcessontainer, p);
        userProcessontainer.add("ViewProductDetailsJPanel", vpdjp);
        CardLayout layout = (CardLayout) userProcessontainer.getLayout();
        layout.next(userProcessontainer);
    }//GEN-LAST:event_jBTViewProductActionPerformed

    private void jTFModQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFModQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFModQuantityActionPerformed

    private void jBTModQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTModQuantityActionPerformed
        int selectedRow = jTableOrderItem.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "You haven't selected any oder yet! Please select at least one order!", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int newQuantity;
        try {
            newQuantity = Integer.parseInt(jTFModQuantity.getText());
        } catch (NumberFormatException e) {
            String message = e.getMessage().toLowerCase();
            JOptionPane.showMessageDialog(null, "The format " + message + " is not correct, only numbers are allowed!", "WARNING", JOptionPane.WARNING_MESSAGE);
            return;
        }
        OrderItem oi = (OrderItem) jTableOrderItem.getValueAt(selectedRow, 0);
        int oldQuantity = oi.getQuantity();
        int curAvail = oi.getProduct().getAvail();

        if (newQuantity > (oldQuantity + curAvail) || newQuantity <= 0) {
            return;
        }

        oi.setQuantity(newQuantity);
        oi.getProduct().setAvail((avail - newQuantity));

        refreshTwoTables();
    }//GEN-LAST:event_jBTModQuantityActionPerformed

    private void jBTRemoveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTRemoveItemActionPerformed
        int selectedRow = jTableOrderItem.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }

        int result = JOptionPane.showConfirmDialog(null, "Would you like to delete this order item?", "Warning", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            OrderItem oi = (OrderItem) jTableOrderItem.getValueAt(selectedRow, 0);
            oi.getProduct().setAvail(avail);
            order.deleteOI(oi);
            refreshTwoTables();

        }
    }//GEN-LAST:event_jBTRemoveItemActionPerformed

    private void jBTCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTCheckOutActionPerformed
        if (order == null || order.getOiList().size() <= 0) {
            JOptionPane.showConfirmDialog(null, "Shopping cart is enmpty!", "WARNING", JOptionPane.OK_OPTION);
        } else {
            order.setOrderNum(odCount);
            Order od = (Order) order.clone();
            od.copyOiList(order.getOiList());
            od.setStatus("Created");
            ShippingRequest sr = new ShippingRequest();
            sr.setOrder(od);
            sr.setSender(userAccount);
            sr.setMessage("Request Approval");
            salesOrg.getWorkQueue().getWorkRequestList().add(sr);
            customerOrderCatalog.addOrder(od);
            for (OrderItem oi : order.getOiList()) {
                oi.getProduct().setSellCount(oi.getQuantity());
            }
            order.clearOI();
            odCount++;

            JOptionPane.showMessageDialog(null, "Thanks for shopping at Pick&Buy!", "Thanks", JOptionPane.YES_OPTION);
            refreshProductTable();
            refreshOderItemTable();
        }
    }//GEN-LAST:event_jBTCheckOutActionPerformed

    private void jCBSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBSupplierActionPerformed
        Object selected = jCBSupplier.getSelectedItem();
        if (selected instanceof Supplier) {
            refreshProductTableBySupplier((Supplier) selected);
        } else {
            refreshProductTable();
        }
    }//GEN-LAST:event_jCBSupplierActionPerformed

    private void jBTBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTBackActionPerformed
        userProcessontainer.remove(this);
        CardLayout layout = (CardLayout) userProcessontainer.getLayout();
        layout.previous(userProcessontainer);
    }//GEN-LAST:event_jBTBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBTAddToCart;
    private javax.swing.JButton jBTBack;
    private javax.swing.JButton jBTCheckOut;
    private javax.swing.JButton jBTModQuantity;
    private javax.swing.JButton jBTRemoveItem;
    private javax.swing.JButton jBTViewProduct;
    private javax.swing.JComboBox jCBSupplier;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinnerQuantity;
    private javax.swing.JTextField jTFModQuantity;
    private javax.swing.JTable jTableOrderItem;
    private javax.swing.JTable jTableProduct;
    // End of variables declaration//GEN-END:variables
}
