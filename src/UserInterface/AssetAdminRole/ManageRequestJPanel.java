/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.AssetAdminRole;

import Business.Organization.AssetMgtOrganization;
import Business.Organization.Organization;
import Business.Surgery.SurgeryRequest;
import Business.SurgeryRoom.SurgeryRoom;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Martin
 */
public class ManageRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReservationMgnJPanel
     */
    private JPanel userProcessContainer;
    private Organization organization;
    
    
    public ManageRequestJPanel(JPanel upc, Organization org) {
        initComponents();
        this.userProcessContainer = upc;
        this.organization = org;
        
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        reserveJButton = new javax.swing.JButton();

        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request Date", "Device ID", "Name", "Next Maint", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestJTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Manage Reservation");

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backJButton.setText("<< Back");

        reserveJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        reserveJButton.setText("Approve");
        reserveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reserveJButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveJButton)
                    .addComponent(backJButton))
                .addContainerGap(152, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void reserveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if(selectedRow <0){
            JOptionPane.showMessageDialog(null, "No request is selected");
            return;
        }
        
        SurgeryRequest request = (SurgeryRequest)requestJTable.getValueAt(selectedRow, 0);
        request.setStatus("Approved");
        SurgeryRoom room = request.getSurgeryRoom();
        room.getSgyScheduleDirectory().getSurgeryScheduleList().add(request.getSurgerySchedule());
    }//GEN-LAST:event_reserveJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestJTable;
    private javax.swing.JButton reserveJButton;
    // End of variables declaration//GEN-END:variables

    private void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel)requestJTable.getModel();
        dtm.setRowCount(0);
        SimpleDateFormat dateformat = new SimpleDateFormat("dd/MM/yyyy");
        
        for(SurgeryRequest request : ((AssetMgtOrganization)organization).getSurgeryRequestList()){
            Object[] row = new Object[5];
            
            row[0] = request;
            row[1] = request.getSurgerySchedule().getMedicalDevice().getDeviceID();
            row[2] = request.getSurgerySchedule().getMedicalDevice().getName();
            row[3] = dateformat.format(request.getSurgerySchedule().getMedicalDevice().getMaintScheduleHistory().getLastMaintenace().getNextMaintDate());
            row[4] = request.getStatus();
            
            dtm.addRow(row);
        }
    }
}
