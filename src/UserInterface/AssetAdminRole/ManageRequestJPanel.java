/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.AssetAdminRole;

import Business.Organization.AssetMgtOrganization;
import Business.Organization.Organization;
import Business.Surgery.SurgeryRequest;
import Business.SurgeryRoom.SurgeryRoom;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Martin
 */
public class ManageRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReservationMgnJPanel
     */
    private JPanel userProcessContainer;
    private Organization organization;
    private String szDecision;
    
    public ManageRequestJPanel(JPanel upc, Organization org) {
        initComponents();
        this.userProcessContainer = upc;
        this.organization = org;
        buttonGroup.add(approveJRadioButton);
        buttonGroup.add(rejectJRadioButton);
        
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        decisioinJButton = new javax.swing.JButton();
        approveJRadioButton = new javax.swing.JRadioButton();
        rejectJRadioButton = new javax.swing.JRadioButton();

        setLayout(new java.awt.GridBagLayout());

        requestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request Date", "Device ID", "Name", "Next Maint", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestJTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 425;
        gridBagConstraints.ipady = 119;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(28, 12, 0, 39);
        add(jScrollPane1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Manage Request");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 12, 0, 0);
        add(jLabel1, gridBagConstraints);

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 12, 0, 0);
        add(backJButton, gridBagConstraints);

        decisioinJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        decisioinJButton.setText("Decision");
        decisioinJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decisioinJButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 0, 39);
        add(decisioinJButton, gridBagConstraints);

        approveJRadioButton.setText("Approve");
        approveJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveJRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 108, 151, 0);
        add(approveJRadioButton, gridBagConstraints);

        rejectJRadioButton.setText("Reject");
        rejectJRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectJRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 18, 151, 0);
        add(rejectJRadioButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void decisioinJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decisioinJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestJTable.getSelectedRow();
        if(selectedRow <0){
            JOptionPane.showMessageDialog(null, "No request is selected");
            return;
        }
        
        SurgeryRequest request = (SurgeryRequest)requestJTable.getValueAt(selectedRow, 0);
        Date nextMaintDate = request.getSurgerySchedule().getMedicalDevice().getMaintScheduleHistory().getLastMaintenace().getNextMaintDate();        
        request.setStatus(szDecision);
        if(request.getSurgerySchedule().getDate().after(nextMaintDate)){
            JOptionPane.showMessageDialog(null, "Request date is after equipment next maintenance date! You can't approve this request!");
             request.setStatus("Rejected");
        }

        if(szDecision.equals("Approved")){
            SurgeryRoom room = request.getSurgeryRoom();
            room.getSgyScheduleDirectory().getSurgeryScheduleList().add(request.getSurgerySchedule());
        }
    }//GEN-LAST:event_decisioinJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void approveJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveJRadioButtonActionPerformed
        // TODO add your handling code here:
        szDecision = "Approved";
    }//GEN-LAST:event_approveJRadioButtonActionPerformed

    private void rejectJRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectJRadioButtonActionPerformed
        // TODO add your handling code here:
        szDecision = "Rejected";
    }//GEN-LAST:event_rejectJRadioButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton approveJRadioButton;
    private javax.swing.JButton backJButton;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton decisioinJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rejectJRadioButton;
    private javax.swing.JTable requestJTable;
    // End of variables declaration//GEN-END:variables

    private void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel)requestJTable.getModel();
        dtm.setRowCount(0);
        SimpleDateFormat dateformat = new SimpleDateFormat("dd/MM/yyyy");
        
        for(SurgeryRequest request : ((AssetMgtOrganization)organization).getSurgeryRequestList()){
            Object[] row = new Object[5];
            
            row[0] = request;
            row[1] = request.getSurgerySchedule().getMedicalDevice().getDeviceID();
            row[2] = request.getSurgerySchedule().getMedicalDevice().getName();
            row[3] = dateformat.format(request.getSurgerySchedule().getMedicalDevice().getMaintScheduleHistory().getLastMaintenace().getNextMaintDate());
            row[4] = request.getStatus();
            
            dtm.addRow(row);
        }
    }
}
